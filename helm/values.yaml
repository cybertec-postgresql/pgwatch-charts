storage: postgres
# Only required if storage is postgres
postgres_storage:
  database: &metricsdatabase pgwatch2_metrics

metrics_preset:
  name: remotedba
  description: Metrics used for monitoring of Remote-DBA Databases
  metrics: '{"kpi": 120, "wal": 60, "locks": 60, "db_size": 300, "archiver": 60, "backends": 60, "bgwriter": 60, "cpu_load": 60, "db_stats": 60, "settings": 7200, "wal_size": 300, "locks_mode": 60, "index_stats": 900, "replication": 120, "sproc_stats": 180, "table_stats": 300, "wal_receiver": 120, "change_events": 300, "table_io_stats": 600, "sequence_health": 3600, "replication_slots": 120}'

databases:
- host: pgwatch2-postgresql
  grafana_preset_metrics: remotedba
  port: 5432
  user: pgwatch2
  password: 'pgwatch2'
  dbs:
    - postgres
    - foo
    - bar
- host: pgwatch2-postgresql-hl
  grafana_preset_metrics: remotedba
  port: 5432
  user: pgwatch2
  password: 'pgwatch2'
  dbs:
    - postgres
    - pgwatch2

daemon:
  enabled: true
  image:
    repository: cybertec/pgwatch2-daemon
    tag: latest
  resources: {}
  env:
    PW2_PG_RETENTION_DAYS: "14"
    PW2_MIN_DB_SIZE_MB: "0"

bootstrap:
  image:
    repository: cybertec/pgwatch2-db-bootstrapper
    tag: latest

postgresql:
  enabled: true
  auth:
    postgresPassword: pgwatch2
  user: &postgresuser pgwatch2
  password: &postgrespassword pgwatch2
  primary:
    initdb:
      # This value file assumes that we are installing the helm chart with the name "pgwatch2"
      # replace pgwatch2 with the name you are installing the chart.
      scriptsConfigMap: pgwatch2-initdb
  secretname: pgwatch2-postgresql-credentials
  secretkey: PATRONI_SUPERUSER_PASSWORD

timescaledb-single:
  fullnameOverride: pgwatch2-postgresql
  replicaCount: 3 # default value
  persistentVolumes:
    data:
      enabled: true
      size: 50Gi
    wal:
      enabled: true
      size: 5Gi
  postInit:
    - configMap:
        name: pgwatch2-initdb
        optional: false
  secrets:
    credentials:
      PATRONI_pgwatch2_PASSWORD: &postgrespassword

influxdb:
  enabled: false
  service:
    type: ClusterIP

webui:
  enabled: true
  service:
    enabled: True
    port: 80
    targetPort: 8080
    type: ClusterIP
  image:
    repository: cybertec/pgwatch2
    tag: latest
  ingress:
    enabled: true
    # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
    # ingressClassName: nginx
    # Values can be templated
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    labels: {}
    path: /

    # pathType is only for k8s >= 1.1=
    pathType: Prefix

    hosts:
      - webui-pgwatch2.local
    ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
    extraPaths: []
    # - path: /*
    #   backend:
    #     serviceName: ssl-redirect
    #     servicePort: use-annotation
    ## Or for k8s > 1.19
    # - path: /*
    #   pathType: Prefix
    #   backend:
    #     service:
    #       name: ssl-redirect
    #       port:
    #         name: use-annotation


    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local


grafana:
  sidecar:
    dashboards:
      enabled: true
  enabled: True
  service:
    type: ClusterIP
  noAnonymous: false
  user: admin
  password: pgwatch2admin # password will be auto generated if emtpy
  ingress:
    # Use webui.ingress as an example if you want to use ingress for grafana.
    enabled: true
    hosts:
      - grafana-pgwatch2.local
  ldap:
    enabled: true
    config: |
      [[servers]]
      # Ldap server host (specify multiple hosts space separated)
      host = "127.0.0.1"
      # Default port is 389 or 636 if use_ssl = true
      port = 389
      # Set to true if LDAP server should use an encrypted TLS connection (either with STARTTLS or LDAPS)
      use_ssl = false
      # If set to true, use LDAP with STARTTLS instead of LDAPS
      start_tls = false
      # set to true if you want to skip SSL cert validation
      ssl_skip_verify = false
      # set to the path to your root CA certificate or leave unset to use system defaults
      # root_ca_cert = "/path/to/certificate.crt"
      # Authentication against LDAP servers requiring client certificates
      # client_cert = "/path/to/client.crt"
      # client_key = "/path/to/client.key"

      # Search user bind dn
      bind_dn = "cn=admin,dc=grafana,dc=org"
      # Search user bind password
      # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
      bind_password = "grafana"

      # User search filter, for example "(cn=%s)" or "(sAMAccountName=%s)" or "(uid=%s)"
      # Allow login from email or username, example "(|(sAMAccountName=%s)(userPrincipalName=%s))"
      search_filter = "(cn=%s)"

      # An array of base dns to search through
      search_base_dns = ["dc=grafana,dc=org"]

      # group_search_filter = "(&(objectClass=posixGroup)(memberUid=%s))"
      # group_search_filter_user_attribute = "distinguishedName"
      # group_search_base_dns = ["ou=groups,dc=grafana,dc=org"]

      # Specify names of the LDAP attributes your LDAP uses
      [servers.attributes]
      member_of = "memberOf"
      email =  "email"
  grafana.ini:
    dashboards:
      default_home_dashboard_path: "/tmp/dashboards/health-check.json"
    auth.ldap:
      enabled: true
      config_file: /etc/grafana/ldap.toml
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Postgres
        type: postgres
        url: pgwatch2-postgresql:5432
        isDefault: true
        user: *postgresuser
        secureJsonData:
          password: *postgrespassword
        jsonData:
          database: *metricsdatabase
          sslmode: 'require' # disable/require/verify-ca/verify-full
          maxOpenConns: 0 # Grafana v5.4+
          maxIdleConns: 2 # Grafana v5.4+
          connMaxLifetime: 14400 # Grafana v5.4+
          postgresVersion: 1400 # 903=9.3, 904=9.4, 905=9.5, 906=9.6, 1000=10
          timescaledb: true

  image:
    repository: grafana/grafana
    tag: 8.5.16
